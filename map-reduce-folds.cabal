cabal-version:       2.2.0

name:                map-reduce-folds
version:             0.2.0.0
synopsis:            foldl wrappers for map-reduce
description:         wrappers around foldl folds that make it simpler to do map-reduce (or split-apply-combine) style folds.  Includes some general types
                     as well as some simple building blocks and tools for executing the folds in parallel.
-- bug-reports:
license:             BSD-3-Clause
license-file:        LICENSE
author:              Adam Conner-Sax
maintainer:          adam_conner_sax@yahoo.com
-- copyright:
category:            Control
extra-source-files:  CHANGELOG.md    
Build-type: Simple

flag dump-core
  description: Dump HTML for the core generated by GHC during compilation
  default:     False
            
common deps
  build-depends: base >= 4.11.1.0
               , containers
               , foldl
               , profunctors               
               
library
  import: deps
  if flag(dump-core)
    build-depends: dump-core
    ghc-options: -fforce-recomp -fplugin=DumpCore -fplugin-opt DumpCore:core-html  
  ghc-options: -Wall -O2 -fspecialise-aggressively -funbox-strict-fields -fexpose-all-unfoldings
  exposed-modules: Control.MapReduce
                 , Control.MapReduce.Core
                 , Control.MapReduce.Simple
                 , Control.MapReduce.Engines
                 , Control.MapReduce.Engines.GroupBy
                 , Control.MapReduce.Engines.List
                 , Control.MapReduce.Engines.Streaming
                 , Control.MapReduce.Engines.Streamly
                 , Control.MapReduce.Engines.Vector
                 , Control.MapReduce.Engines.Parallel

  build-depends:   dlist
                 , hashable
                 , parallel
                 , split
                 , streaming
                 , streamly
                 , text
                 , unordered-containers
                 , vector
  hs-source-dirs:      src
  default-language:    Haskell2010

  
benchmark bench-map-reduce
  import: deps
  if flag(dump-core)
    build-depends: dump-core
    ghc-options: -fforce-recomp -fplugin=DumpCore -fplugin-opt DumpCore:core-html                    
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  other-modules:       
  ghc-options:         -O3 -fspecialise-aggressively -funbox-strict-fields -fexpose-all-unfoldings
--                       -threaded "-with-rtsopts=-N" -funbox-strict-fields -fno-warn-unused-binds -fno-warn-unused-matches
  main-is:             MapReduce.hs
  build-depends:       map-reduce-folds, foldl, base, criterion, unordered-containers, deepseq, text, random
  default-language:    Haskell2010

benchmark bench-groupBy
  import: deps
  if flag(dump-core)
    build-depends: dump-core
    ghc-options: -fforce-recomp -fplugin=DumpCore -fplugin-opt DumpCore:core-html -dinline-check toListCoalg
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  other-modules:       
  ghc-options:         -O2 -fspecialise-aggressively -funbox-strict-fields -fexpose-all-unfoldings
                       -- -ddump-to-file -ddump-simpl -dsuppress-type-applications -dsuppress-coercions -dsuppress-uniques -dsuppress-module-prefixes
--                       -threaded "-with-rtsopts=-N" -funbox-strict-fields -fno-warn-unused-binds -fno-warn-unused-matches
  main-is:             GroupBy.hs
  build-depends:       map-reduce-folds, foldl, base, criterion, unordered-containers, deepseq, text, random, weigh
  default-language:    Haskell2010                   